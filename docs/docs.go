// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag

package docs

import (
	"bytes"
	"encoding/json"
	"strings"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/case/{id}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "Get case by case id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "case ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.ReturnedData"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/cases.Case"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/keyword/{keywordID}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Chat"
                ],
                "summary": "Get catagorys by keyword id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "keyword ID",
                        "name": "keywordID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.ReturnedData"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "integer"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/keyword/{keywordID}/catagory/{catagoryID}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Chat"
                ],
                "summary": "Get questions by catagory id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "catagory ID",
                        "name": "catagoryID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.ReturnedData"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/patient/{patientID}/chat": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Chat"
                ],
                "summary": "New a chat",
                "parameters": [
                    {
                        "description": "patient ID, doctor ID and other chat details",
                        "name": "chatDetail",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/chat.Chat"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.ReturnedData"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/chat.Chat"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/patient/{patientID}/chat/{chatID}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Chat"
                ],
                "summary": "Get a message ID list by chat ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "chat ID",
                        "name": "chatID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "allOf": [
                                    {
                                        "$ref": "#/definitions/api.ReturnedData"
                                    },
                                    {
                                        "type": "object",
                                        "properties": {
                                            "data": {
                                                "type": "array",
                                                "items": {
                                                    "type": "integer"
                                                }
                                            }
                                        }
                                    }
                                ]
                            }
                        }
                    }
                }
            },
            "delete": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Chat"
                ],
                "summary": "Delete a chat",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "chat ID",
                        "name": "chatID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.ReturnedData"
                        }
                    }
                }
            }
        },
        "/patient/{patientID}/chat/{chatID}/message": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Chat"
                ],
                "summary": "New a Message",
                "parameters": [
                    {
                        "description": "chat ID, type and other message details",
                        "name": "messageDetail",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/chat.Message"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.ReturnedData"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/chat.Message"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/patient/{patientID}/chat/{chatID}/message/{messageID}": {
            "delete": {
                "description": "Can be viewed as recall a message",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Chat"
                ],
                "summary": "Delete a message",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "message ID",
                        "name": "messageID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.ReturnedData"
                        }
                    }
                }
            }
        },
        "/patient/{patientID}/chat/{chatID}/messsage/{messageID}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Chat"
                ],
                "summary": "Get a message by message ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "message ID",
                        "name": "messageID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "allOf": [
                                    {
                                        "$ref": "#/definitions/api.ReturnedData"
                                    },
                                    {
                                        "type": "object",
                                        "properties": {
                                            "data": {
                                                "$ref": "#/definitions/chat.Message"
                                            }
                                        }
                                    }
                                ]
                            }
                        }
                    }
                }
            }
        },
        "/ping": {
            "get": {
                "description": "respond to a ping request from client",
                "produces": [
                    "application/json"
                ],
                "summary": "Test server up statue",
                "responses": {
                    "200": {
                        "description": "Good, server is up",
                        "schema": {
                            "$ref": "#/definitions/api.ReturnedData"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "api.ReturnedData": {
            "type": "object",
            "properties": {
                "data": {
                    "description": "Anything you want to pass to the frontend, but make it simple and necessary\nIf there's nothing to return, this field will be omitted",
                    "type": "object"
                },
                "status": {
                    "description": "A simple string indicating the status.\nIs it ok, or some error occurs? If so, what is the error?\nIt should be \"ok\" is everything goes fine",
                    "type": "string"
                }
            }
        },
        "cases.Case": {
            "type": "object",
            "properties": {
                "complaint": {
                    "type": "string"
                },
                "diagnosis": {
                    "type": "string"
                },
                "id": {
                    "description": "Every object should have ID",
                    "type": "integer"
                },
                "patientID": {
                    "description": "A has many relationship should be on this",
                    "type": "integer"
                },
                "prescriptions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cases.Prescription"
                    }
                }
            }
        },
        "cases.Prescription": {
            "type": "object",
            "properties": {
                "caseID": {
                    "type": "integer"
                },
                "details": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "chat.Chat": {
            "type": "object",
            "properties": {
                "doctorID": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "patientID": {
                    "type": "integer"
                },
                "url": {
                    "description": "The url of the chatting window",
                    "type": "string"
                }
            }
        },
        "chat.Message": {
            "type": "object",
            "properties": {
                "chat": {
                    "description": "Default foreign key:ID in Chat",
                    "$ref": "#/definitions/chat.Chat"
                },
                "content": {
                    "description": "Use escaped string for PictureURL",
                    "type": "string"
                },
                "createdAt": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "type": {
                    "description": "Texts, pictures....",
                    "type": "integer"
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "",
	Host:        "",
	BasePath:    "",
	Schemes:     []string{},
	Title:       "",
	Description: "",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
