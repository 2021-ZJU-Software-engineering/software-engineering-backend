{
    "swagger": "2.0",
    "info": {
        "description": "This is a sample server Petstore server.",
        "title": "Swagger Example API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "localhost:12448",
    "basePath": "/api",
    "paths": {
        "/case": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Case"
                ],
                "summary": "New a case",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "patient ID",
                        "name": "pid",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "doctor ID",
                        "name": "did",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "department name",
                        "name": "department",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"msg\":\"establishment success\"}",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/case/PastHistory/{id}": {
            "patch": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Case"
                ],
                "summary": "Update Past History",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "case ID",
                        "name": "id",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Past History details",
                        "name": "details",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"msg\":\"modification success\"}",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/case/complaint/{id}": {
            "patch": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Case"
                ],
                "summary": "Update complaint",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "case ID",
                        "name": "id",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "complaint details",
                        "name": "details",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"msg\":\"modification success\"}",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/case/department": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Case"
                ],
                "summary": "Get lastest case by department name",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "department name",
                        "name": "department",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.ReturnedData"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/pkg_cases.Case"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/case/diagnosis/{id}": {
            "patch": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Case"
                ],
                "summary": "Update diagnosis",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "case ID",
                        "name": "id",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "diagnosis details",
                        "name": "details",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"msg\":\"modification success\"}",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/case/{cid}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Case"
                ],
                "summary": "Get prevoius case by current case ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "current case ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.ReturnedData"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/pkg_cases.Case"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/case/{id}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Case"
                ],
                "summary": "Get case by case id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "case ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.ReturnedData"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/pkg_cases.Case"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/ping": {
            "get": {
                "description": "respond to a ping request from client",
                "produces": [
                    "application/json"
                ],
                "summary": "Test server up statue",
                "responses": {
                    "200": {
                        "description": "Good, server is up",
                        "schema": {
                            "$ref": "#/definitions/api.ReturnedData"
                        }
                    }
                }
            }
        },
        "/prescription": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Prescription"
                ],
                "summary": "New a prescrition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "case ID",
                        "name": "id",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "prescription details",
                        "name": "details",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"msg\":\"establishment success\"}",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/prescription/{id}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Prescription"
                ],
                "summary": "Get prescription by prescription id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "prescription ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.ReturnedData"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/github.com_AsterNighT_software-engineering-backend_pkg_cases.Prescription"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "api.ReturnedData": {
            "type": "object",
            "properties": {
                "data": {
                    "description": "Anything you want to pass to the frontend, but make it simple and necessary\nIf there's nothing to return, this field will be omitted",
                    "type": "object"
                },
                "status": {
                    "description": "A simple string indicating the status.\nIs it ok, or some error occurs? If so, what is the error?\nIt should be \"ok\" is everything goes fine",
                    "type": "string"
                }
            }
        },
        "github.com_AsterNighT_software-engineering-backend_pkg_cases.Case": {
            "type": "object",
            "properties": {
                "complaint": {
                    "description": "Use urls to locate pictures",
                    "type": "string"
                },
                "department": {
                    "type": "string"
                },
                "diagnosis": {
                    "type": "string"
                },
                "doctorID": {
                    "type": "integer"
                },
                "id": {
                    "description": "Every object should have ID",
                    "type": "integer"
                },
                "pastHistory": {
                    "type": "string"
                },
                "patientID": {
                    "description": "A has many relationship should be on this",
                    "type": "integer"
                },
                "prescriptions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github.com_AsterNighT_software-engineering-backend_pkg_cases.Prescription"
                    }
                },
                "previousCase": {
                    "description": "Previous case (the lastest one). If there is none prevous case, set nil",
                    "$ref": "#/definitions/github.com_AsterNighT_software-engineering-backend_pkg_cases.Case"
                },
                "previousCaseID": {
                    "type": "integer"
                }
            }
        },
        "github.com_AsterNighT_software-engineering-backend_pkg_cases.Prescription": {
            "type": "object",
            "properties": {
                "caseID": {
                    "type": "integer"
                },
                "details": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "pkg_cases.Case": {
            "type": "object",
            "properties": {
                "complaint": {
                    "description": "Use urls to locate pictures",
                    "type": "string"
                },
                "department": {
                    "type": "string"
                },
                "diagnosis": {
                    "type": "string"
                },
                "doctorID": {
                    "type": "integer"
                },
                "id": {
                    "description": "Every object should have ID",
                    "type": "integer"
                },
                "pastHistory": {
                    "type": "string"
                },
                "patientID": {
                    "description": "A has many relationship should be on this",
                    "type": "integer"
                },
                "prescriptions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pkg_cases.Prescription"
                    }
                },
                "previousCase": {
                    "description": "Previous case (the lastest one). If there is none prevous case, set nil",
                    "$ref": "#/definitions/pkg_cases.Case"
                },
                "previousCaseID": {
                    "type": "integer"
                }
            }
        },
        "pkg_cases.Prescription": {
            "type": "object",
            "properties": {
                "caseID": {
                    "type": "integer"
                },
                "details": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                }
            }
        }
    }
}