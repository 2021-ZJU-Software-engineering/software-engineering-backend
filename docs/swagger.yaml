basePath: /api
definitions:
  api.ReturnedData:
    properties:
      data:
        description: |-
          Anything you want to pass to the frontend, but make it simple and necessary
          If there's nothing to return, this field will be omitted
        type: object
      status:
        description: |-
          A simple string indicating the status.
          Is it ok, or some error occurs? If so, what is the error?
          It should be "ok" is everything goes fine
        type: string
    type: object
  github.com_AsterNighT_software-engineering-backend_pkg_cases.Case:
    properties:
      complaint:
        description: Use urls to locate pictures
        type: string
      department:
        type: string
      diagnosis:
        type: string
      doctorID:
        type: integer
      id:
        description: Every object should have ID
        type: integer
      pastHistory:
        type: string
      patientID:
        description: A has many relationship should be on this
        type: integer
      prescriptions:
        items:
          $ref: '#/definitions/github.com_AsterNighT_software-engineering-backend_pkg_cases.Prescription'
        type: array
      previousCase:
        $ref: '#/definitions/github.com_AsterNighT_software-engineering-backend_pkg_cases.Case'
        description: Previous case (the lastest one). If there is none prevous case,
          set nil
      previousCaseID:
        type: integer
    type: object
  github.com_AsterNighT_software-engineering-backend_pkg_cases.Prescription:
    properties:
      caseID:
        type: integer
      details:
        type: string
      id:
        type: integer
    type: object
  pkg_cases.Case:
    properties:
      complaint:
        description: Use urls to locate pictures
        type: string
      department:
        type: string
      diagnosis:
        type: string
      doctorID:
        type: integer
      id:
        description: Every object should have ID
        type: integer
      pastHistory:
        type: string
      patientID:
        description: A has many relationship should be on this
        type: integer
      prescriptions:
        items:
          $ref: '#/definitions/pkg_cases.Prescription'
        type: array
      previousCase:
        $ref: '#/definitions/pkg_cases.Case'
        description: Previous case (the lastest one). If there is none prevous case,
          set nil
      previousCaseID:
        type: integer
    type: object
  pkg_cases.Prescription:
    properties:
      caseID:
        type: integer
      details:
        type: string
      id:
        type: integer
    type: object
host: localhost:12448
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server Petstore server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Swagger Example API
  version: "1.0"
paths:
  /case:
    post:
      parameters:
      - description: patient ID
        in: formData
        name: pid
        required: true
        type: integer
      - description: doctor ID
        in: formData
        name: did
        required: true
        type: integer
      - description: department name
        in: formData
        name: department
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"msg":"establishment success"}'
          schema:
            type: string
      summary: New a case
      tags:
      - Case
  /case/{cid}:
    get:
      parameters:
      - description: current case ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api.ReturnedData'
            - properties:
                data:
                  $ref: '#/definitions/pkg_cases.Case'
              type: object
      summary: Get prevoius case by current case ID
      tags:
      - Case
  /case/{id}:
    get:
      parameters:
      - description: case ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api.ReturnedData'
            - properties:
                data:
                  $ref: '#/definitions/pkg_cases.Case'
              type: object
      summary: Get case by case id
      tags:
      - Case
  /case/PastHistory/{id}:
    patch:
      parameters:
      - description: case ID
        in: formData
        name: id
        required: true
        type: integer
      - description: Past History details
        in: formData
        name: details
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"msg":"modification success"}'
          schema:
            type: string
      summary: Update Past History
      tags:
      - Case
  /case/complaint/{id}:
    patch:
      parameters:
      - description: case ID
        in: formData
        name: id
        required: true
        type: integer
      - description: complaint details
        in: formData
        name: details
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"msg":"modification success"}'
          schema:
            type: string
      summary: Update complaint
      tags:
      - Case
  /case/department:
    get:
      parameters:
      - description: department name
        in: path
        name: department
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api.ReturnedData'
            - properties:
                data:
                  $ref: '#/definitions/pkg_cases.Case'
              type: object
      summary: Get lastest case by department name
      tags:
      - Case
  /case/diagnosis/{id}:
    patch:
      parameters:
      - description: case ID
        in: formData
        name: id
        required: true
        type: integer
      - description: diagnosis details
        in: formData
        name: details
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"msg":"modification success"}'
          schema:
            type: string
      summary: Update diagnosis
      tags:
      - Case
  /ping:
    get:
      description: respond to a ping request from client
      produces:
      - application/json
      responses:
        "200":
          description: Good, server is up
          schema:
            $ref: '#/definitions/api.ReturnedData'
      summary: Test server up statue
  /prescription:
    post:
      parameters:
      - description: case ID
        in: formData
        name: id
        required: true
        type: integer
      - description: prescription details
        in: formData
        name: details
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"msg":"establishment success"}'
          schema:
            type: string
      summary: New a prescrition
      tags:
      - Prescription
  /prescription/{id}:
    get:
      parameters:
      - description: prescription ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api.ReturnedData'
            - properties:
                data:
                  $ref: '#/definitions/github.com_AsterNighT_software-engineering-backend_pkg_cases.Prescription'
              type: object
      summary: Get prescription by prescription id
      tags:
      - Prescription
swagger: "2.0"
